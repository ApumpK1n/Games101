            基于位置的流体
摘要：
  在流体模拟中，增强不可压缩性对于真实性至关重要。它在计算上非常耗时。最近的工作提高了它的效率，但仍然需要不切实际的时间步长
用于实时应用。在这项工作中，我们提出了一个集成到基于位置的动力学框架的迭代密度求解器（PBD）。通过制定和解决一组位置约束强制
恒定密度，我们的方法类似于现代平滑粒子流体动力学（SPH）求解器的不可压缩性的收敛性，但是继承了它的几何的稳定性。PBD允许适合实时应用
的大时间步长。我们加入人工压力用于改善粒子分布，产生表面张力。并且降低了传统SPH的邻居要求。
最后，我们通过应用涡度限制作为速度后处理来解决能量损失问题。


介绍：
  流体，尤其是水等一些液体，造成许多视觉上丰富的现象，在计算机图形学中模拟它们是一个有趣的领域并且具有挑战的事情。
有很多种模拟它们的方法，我们使用粒子方法的原因是它的简单性和灵活性。
  平滑粒子流体动力学（SPH）是一种众所周知的基于粒子的流体模拟方法。它具有许多吸引人的特性：质量守恒、拉格朗日离散化
（在模拟域不一定事先知道的游戏中特别有用）和概念简单性。
然而，SPH对邻域缺陷引起的密度波动很敏感，并且由于模型的非结构化性质，执行不可压缩的成本很高。最近的工作将效率提高了一个数量级，
但仍然需要小时间步长，限制了实时应用。
  对于交互式环境，鲁棒性是一个关键问题：模拟必须很好地处理退化情况。如果粒子没有足够的邻居来进行精确的密度估计，SPH算法通常会变得不稳定。
典型的解决方案是以增加计算为代价，通过采用足够小的时间步长或使用足够多的粒子来尝试避免这些情况。
  在本文中，我们展示了在基于位置的动力学（PBD）框架内如何模拟不可压缩流动。我们选择PBD是因为它的无条件稳定时间集成性和健壮性，
使其在游戏和电影制片中广受欢迎。通过解决粒子问题自由表面的缺陷，并处理大的密度误差，我们的方法允许用户用不可压缩性来换取性能，同时保持稳定。

相关工作：
  Müller [2003] 表明 SPH 可使用低刚度状态方程 (EOS) 模拟粘度和表面张力从而被用于交互式流体模拟。 然而，为了保持不可压缩性，
标准 SPH 或弱可压缩 SPH (WCSPH) [Becker和 Teschner 2007] 需要刚性方程，导致大的力限制时间步长。
预测修正不可压缩SPH (PCISPH) [Solenthaler 和 Pajarola 2009] 通过使用迭代雅可比风格的方法来放宽这个时间步长限制，
该方法累积压力变化并施加力直到收敛。它的优点是不需要用户指定刚度值以及在许多密度校正中分摊邻居发现的成本。

  Bodin 等人 [2012] 通过将不可压缩性作为速度约束系统来实现均匀密度的流体。他们构建了一个使用线性化约束函数的线性互补问题，
使用 Gauss-Seidel 迭代求解。 相比之下，我们的方法（和 PCISPH）试图通过直接对粒子进行操作，在每次雅可比迭代重新评估约束误差和梯度，解决非线性问题。

  混合方法，例如流体隐式粒子 (FLIP) [Brackbill和 Ruppel 1986] 使用网格进行压力求解并将速度变化传递回粒子。
FLIP后来由 Zhu 和 Bridson [2005] 扩展到具有自由表面的不可压缩流动。拉文德兰等人[2011] 在自适应 SPH 更新之前，使用粗网格来求解近似自由发散速度场。

  克拉维特等人[2005] 还使用基于位置的方法来模拟粘弹性流体。 但是，由于时间步长出现在他们的位置投影的各个地方，他们的做法只是
在常规显式积分中条件稳定。 

 基于位置的动力学[M¨uller 等人2007]提供了一种方法用于基于Verlet积分的游戏动力学仿真。 它通过直接更新粒子位置，
使用 Gauss-Seidel 迭代求解非线性约束系统。通过逃避力，从位置更新中隐式地推导出动量变化，与显式方法相关的典型不稳定性是避免了。


强制不可压缩性：
  为了强制恒定密度，我们解决了一个非线性约束系统，每个粒子有一个约束。每个约束都是粒子位置及其邻居位置的函数，我们统称为 p1,...,pn。
继 [Bodin 等人。2012] 第 i 个粒子的密度约束是使用状态方程：(1)
      
  其中 ρ0 是静止密度，ρi 由标准 SPH 密度估计器给出：(2)

  我们将所有粒子视为具有相等的质量，并将从后续方程中删除该项。 在我们的实现中，我们使用 Poly6 核进行密度估计，使用 Spiky 核进行梯度计算，
如 [M¨uller et al. 2003].

  现在我们给出基于位置的动力学方法的一些背景，然后展示如何结合我们的密度约束。 PBD 旨在找到满足约束条件的粒子位置校正 ∆p：(3):

  这是通过沿着约束梯度的一系列牛顿步骤找到的：(4)(5)(6)

  [Monaghan 1992] 给出了定义在粒子上的函数梯度的 SPH 配方。 应用这一点，约束函数 (1) 相对于粒子 k 的梯度由下式给出：(7)

  根据 k 是否是相邻粒子，它有两种不同的情况：(8)

  将其代入 (6) 并求解 λ 给出(9).

  这对于约束中的所有粒子都是相同的。

  由于约束函数 (1) 是非线性的，在平滑核边界处梯度消失，当粒子接近分离时，方程 (9) 中的分母会导致不稳定。 
与在 PCISPH 中一样，这可以通过基于具有填充邻域的参考粒子配置预先计算保守的校正比例来解决。

  或者，可以使用约束力混合 (CFM) [Smith 2006] 来规范约束。 CFM 背后的想法是通过将一些约束力混合回约束函数来软化约束，
在 PBD 的情况下，这将 (6) 更改为(10).
  其中 ε 是用户指定的松弛参数，它在整个模拟过程中保持不变。 缩放因子现在是(11)
包括来自相邻粒子密度约束 (λj) 的修正的总位置更新 Δpi 是(12).


拉伸不稳定性:
  SPH 模拟中的一个常见问题是当一个粒子只有几个邻居并且无法满足静止密度时，负压导致粒子聚集或结块（图 2）。
这可能可以通过将压力设为非负来避免，但代价是降低了颗粒内聚力。 克拉维特等人[2005] 使用第二个“近压”术语，
而 Alduan 和 Otaduy [2011] 使用离散元 (DEM) 力 [Bell 等人。 2005] 将粒子推开的距离小于平滑内核宽度的一半。 
Schechter 和 Bridson [2012] 在自由表面周围放置鬼粒子以确保一致的密度估计。

  我们遵循 [Monaghan 2000] 的方法，该方法添加了根据平滑内核本身指定的人工压力为(13).
  其中，Δq 是平滑核半径内某个固定距离的点，k 是一个小的正常数。 |Δq|= 0.1h……0.3h，k = 0.1 和 n = 4 效果很好。 
然后我们将这个术语包含在粒子位置更新中(14)
  
  这个纯排斥项使粒子密度略低于静止密度。 因此，粒子将它们的邻居向内拉，导致类似于 [Clavet et al. 2005]。 
我们注意到这种效应是反聚类项的非物理人工产物，需要在聚类误差和表面张力强度之间进行权衡。
  在没有聚类问题的情况下，我们的算法摆脱了 SPHa 粒子必须具有 30-40 个相邻时间的经验法则，从而提高了效率。


涡度约束和粘度:
  基于位置的方法会引入额外的阻尼，这通常是不希望的。 Fedkiw 等人[2001] 将涡度限制引入计算机图形以解决烟雾模拟中的数值耗散问题，
后来在 [Lentineetal.2011] 中扩展到能量守恒流体模拟。InBubblesAlive，Hong 等人[2008] 展示了如何在混合设置中使用涡度限制，
其中通过涡度从网格转移到 SPH 粒子以引入湍流运动。

  我们可以选择使用涡度约束来代替损失的能量（图 5）。 这需要首先计算粒子所在位置的涡度，为此我们使用 [Monaghan 1992] 中给出的估计量：(15)
  其中 vij = vj−vi。 一旦我们有了涡量，我们就可以使用位置向量 N= η |η| 来计算修正力。 其中η =∇|ω|i. (16)

  不像[Hongetal.2008]我们不使用归一化ω，因为这会不加选择地增加涡度。 相反，我们使用非标准化值，它只会在已经存在的地方增加涡度，如 [Fedkiw 等人2001]。
  此外，我们应用 XSPH 粘度 [Schechter 和 Bridson 2012]，这对于相干运动很重要。 在我们的模拟中，参数 c 通常选择为 0.01：(17)


算法：
  我们的模拟循环在算法 1 中进行了概述。它类似于原始的基于位置的动力学更新，不同之处在于每个约束都以雅可比方式独立解决，而不是通过顺序高斯-塞德文学。 
作为约束求解循环的一部分，我们对实体执行碰撞检测。
  我们每步重新计算一次粒子邻域，并在每次求解器迭代时重新计算距离和约束值。 这种优化可能会导致密度低估，例如，如果粒子与初始邻居集分离。 
在 PCISPH 中，这会导致严重的问题，一旦粒子变得孤立，每次迭代都会使其压力越来越负。
如果它在随后的迭代中重新接触，则会施加大的错误压力。 我们的算法只考虑当前粒子的位置（而不是累积压力），所以不会发生这种情况。


渲染：
  实时流体表面处理使用基于 GPU 的椭球喷溅技术进行。 首先使用 Yu 和 Turk [2013] 的方法计算粒子各向异性，然后使用基于 [van der Laan et al. 2013] 中提出的屏幕空间过滤的方法重建表面。 2009]。